<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:amqps="http://www.mulesoft.org/schema/mule/amqps" xmlns:amqp="http://www.mulesoft.org/schema/mule/amqp"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/amqp http://www.mulesoft.org/schema/mule/amqp/current/mule-amqp.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/amqps http://www.mulesoft.org/schema/mule/amqps/current/mule-amqps.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">
    <sub-flow name="crm_company_document_get_dragers_golf">
        <flow-ref name="crm_company_get" doc:name="Get CRM Company"/>
        <set-variable variableName="custom_field_dragers" value="${teamleader.company.analoge_dragers}" doc:name="Set custom_field_dragers"/>
        <set-variable variableName="crm_dragers_string_comma" value="#[flowVars.company.custom_fields[flowVars.custom_field_dragers]]" doc:name="crm_dragers_string_comma"/>
        <choice doc:name="Check crm_dragers_string_comma">
            <when expression="#[flowVars.crm_dragers_string_comma == empty]">
                <set-variable variableName="crm_dragers_array_list" value="#[[]]" doc:name="empty - create crm_dragers_array_list"/>
            </when>
            <otherwise>
                <dw:transform-message doc:name="splitBy comma - crm_dragers_array_list">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
flowVars.crm_dragers_string_comma splitBy ","]]></dw:set-payload>
                    <dw:set-variable variableName="crm_dragers_array_list"><![CDATA[%dw 1.0
%output application/java
---
flowVars.crm_dragers_string_comma splitBy ","]]></dw:set-variable>
                </dw:transform-message>
                <set-variable variableName="crm_dragers_array_list" value="#[payload]" doc:name="crm_dragers_array_list"/>
            </otherwise>
        </choice>
        <set-variable variableName="custom_field_golf" value="${teamleader.company.golf}" doc:name="Set custom_field_golf"/>
        <set-variable variableName="crm_golf_string_comma" value="#[flowVars.company.custom_fields[flowVars.custom_field_golf]]" doc:name="crm_golf_string_comma"/>
        <choice doc:name="Check crm_golf_string_comma">
            <when expression="#[flowVars.crm_golf_string_comma == empty]">
                <set-variable variableName="crm_golf_array_list" value="#[[]]" doc:name="empty - create crm_golf_array_list"/>
            </when>
            <otherwise>
                <dw:transform-message doc:name="splitBy comma - crm_golf_array_list">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
flowVars.crm_golf_string_comma splitBy ","]]></dw:set-payload>
                    <dw:set-variable variableName="crm_golf_array_list"><![CDATA[%dw 1.0
%output application/java
---
flowVars.crm_golf_string_comma splitBy ","]]></dw:set-variable>
                </dw:transform-message>
                <set-variable variableName="crm_golf_array_list" value="#[payload]" doc:name="crm_golf_array_list"/>
            </otherwise>
        </choice>
    </sub-flow>
	<sub-flow name="crm_company_document_set_api_fields_comment">
		<choice doc:name="check comment_value is empty">
			<when expression="#[flowVars.comment_value == empty]">
				<set-variable variableName="skip_event" value="true"
					doc:name="Set skip_event = true" />
			</when>
			<otherwise>
				<choice doc:name="Check document_key">
					<when expression="#[flowVars.document_key == 'controle_intentieverklaring']">
						<dw:transform-message doc:name="OK - Update Comment">
							<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{ api_group : p('teamleader.api_group'),
  api_secret : p('teamleader.api_secret'),
  track_changes : "1",
  company_id : flowVars.company_id,
  ("custom_field_" ++ p('teamleader.company.comment_intentieverklaring')) : flowVars.comment_value
}]]></dw:set-payload>
						</dw:transform-message>
					</when>
					<otherwise>
						<set-variable variableName="skip_event" value="true"
							doc:name="Set skip_event = true" />
					</otherwise>
				</choice>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="crm_company_document_set_api_fields_drager_golf">
        <flow-ref name="crm_company_document_get_dragers_golf" doc:name="crm_company_document_get_dragers_golf"/>
        <flow-ref name="xref_analoge_drager" doc:name="xref_analoge_drager"/>
        <flow-ref name="xref_golf" doc:name="xref_golf"/>
        <foreach collection="flowVars.skryv_dragers" doc:name="For Each - skryv_dragers">
            <set-variable variableName="skryv_drager" value="#[payload.?type_drager.?Drager]" doc:name="skryv_drager"/>
            <set-variable variableName="skryv_xref_drager" value="#[flowVars.xref_analoge_drager[flowVars.skryv_drager]]" doc:name="skryv_xref_drager"/>
            <choice doc:name="Choice - crm_dragers_array_list.contains(skryv_xref_drager)">
                <when expression="#[flowVars.skryv_xref_drager == null || flowVars.?crm_dragers_array_list.contains(flowVars.skryv_xref_drager)]">
                    <expression-component doc:name="true - do nothing"><![CDATA[""]]></expression-component>
                </when>
                <otherwise>
                    <expression-component doc:name="crm_dragers_array_list add skryv_xref_drager"><![CDATA[flowVars.crm_dragers_array_list.add(flowVars.skryv_xref_drager)]]></expression-component>
                </otherwise>
            </choice>
            <set-variable variableName="skryv_golf" value="#[payload.?digitalisatiegolf]" doc:name="skryv_golf"/>
            <set-variable variableName="skryv_xref_golf" value="#[flowVars.xref_golf[flowVars.skryv_golf]]" doc:name="skryv_xref_golf"/>
            <choice doc:name="Choice - crm_golf_array_list.contains(skryv_xref_golf)">
                <when expression="#[flowVars.skryv_golf == null || flowVars.?crm_golf_array_list.contains(flowVars.skryv_xref_golf)]">
                    <expression-component doc:name="true - do nothing"><![CDATA[""]]></expression-component>
                </when>
                <otherwise>
                    <expression-component doc:name="crm_golf_array_list add skryv_xref_drager"><![CDATA[flowVars.crm_golf_array_list.add(flowVars.skryv_xref_golf)]]></expression-component>
                </otherwise>
            </choice>
        </foreach>
        <choice doc:name="Check crm_dragers_array_list">
            <when expression="#[flowVars.crm_dragers_array_list == empty]">
                <set-payload value="#[&quot;&quot;]" doc:name="empty - Set Payload. to empty"/>
            </when>
            <otherwise>
                <scripting:component doc:name="crm_dragers_string_comma_new to payload">
                    <scripting:script engine="Groovy"><![CDATA[import java.util.*;

  String crm_dragers_string_comma_new = new String();
  
  Collections.sort(crm_dragers_array_list);

  for(String drager: crm_dragers_array_list){
        if (crm_dragers_string_comma_new.isEmpty()){
          crm_dragers_string_comma_new = drager
        } else {
	  	    crm_dragers_string_comma_new = crm_dragers_string_comma_new + ',' + drager
	  	  }
    };
    
return crm_dragers_string_comma_new;]]></scripting:script>
                </scripting:component>
            </otherwise>
        </choice>
        <set-variable variableName="crm_dragers_string_comma_new" value="#[payload]" doc:name="crm_dragers_string_comma_new"/>
        <choice doc:name="Check - crm_golf_array_list">
            <when expression="#[flowVars.crm_golf_array_list == empty]">
                <set-payload value="#[&quot;&quot;]" doc:name="empty - Set Payload to empty"/>
            </when>
            <otherwise>
                <scripting:component doc:name="crm_golf_string_comma_new to payload">
                    <scripting:script engine="Groovy"><![CDATA[import java.util.*;

  String crm_golf_string_comma_new = new String();
  
  Collections.sort(crm_golf_array_list);

  for(String golf: crm_golf_array_list){
        if (crm_golf_string_comma_new.isEmpty()){
          crm_golf_string_comma_new = golf
        } else {
	  	    crm_golf_string_comma_new = crm_golf_string_comma_new + ',' + golf
	  	  }
    };
    
return crm_golf_string_comma_new;]]></scripting:script>
                </scripting:component>
            </otherwise>
        </choice>
        <set-variable variableName="crm_golf_string_comma_new" value="#[payload]" doc:name="crm_golf_string_comma_new"/>
        <dw:transform-message doc:name="set payload for http call">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{ api_group : p('teamleader.api_group'),
  api_secret : p('teamleader.api_secret'),
  track_changes : "1",
  company_id : flowVars.company_id,
  ("custom_field_" ++ p('teamleader.company.analoge_dragers')) : flowVars.crm_dragers_string_comma_new,
  ("custom_field_" ++ p('teamleader.company.golf')) : flowVars.crm_golf_string_comma_new
}]]></dw:set-payload>
        </dw:transform-message>
	</sub-flow>
	<sub-flow name="crm_company_process_set_api_fields">
		<choice doc:name="Choice">
			<when
				expression="#[flowVars.'x-skryv-event' == 'process' &amp;&amp; flowVars.action == 'created' &amp;&amp; flowVars.process_key == 'Intentieverklaring_v2']">
				<dw:transform-message
					doc:name="1- ITV - process - opgestuurd naar CP (proces ITV opgestart)">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{ api_group : p('teamleader.api_group'),
  api_secret : p('teamleader.api_secret'),
  track_changes : "1",
  company_id : flowVars.company_id,
  ("custom_field_" ++ p('teamleader.company.cp_status')) : p('teamleader.company.cp_status.pending'),
  ("custom_field_" ++ p('teamleader.company.actief')) : "",
  ("custom_field_" ++ p('teamleader.company.intentieverklaring')) : "",
  ("custom_field_" ++ p('teamleader.company.toestemming_starten')) : "0"
}]]></dw:set-payload>
				</dw:transform-message>
			</when>
			<when
				expression="#[flowVars.'x-skryv-event' == 'process' &amp;&amp; flowVars.action == 'ended' &amp;&amp; flowVars.process_key == 'so_ondertekenproces']">
				<dw:transform-message
					doc:name="7 - SEO -process - getekend opgeladen door VIAA">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{ api_group : p('teamleader.api_group'),
  api_secret : p('teamleader.api_secret'),
  track_changes : "1",
  company_id : flowVars.company_id,
  ("custom_field_" ++ p('teamleader.company.cp_status')) : p('teamleader.company.cp_status.ja'),
  ("custom_field_" ++ p('teamleader.company.actief')) : p('teamleader.company.actief.nee'),
  ("custom_field_" ++ p('teamleader.company.toestemming_starten')) : "1",
  ("custom_field_" ++ p('teamleader.company.samenwerkingsovereenkomst')) : "1"
}]]></dw:set-payload>
				</dw:transform-message>
			</when>
			<when
				expression="#[flowVars.'x-skryv-event' == 'process' &amp;&amp; flowVars.action == 'created' &amp;&amp; flowVars.process_key == 'service_agreement']">
				<dw:transform-message doc:name="8 - SA - process - opstarten proces">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{ api_group : p('teamleader.api_group'),
  api_secret : p('teamleader.api_secret'),
  track_changes : "1",
  company_id : flowVars.company_id,
  ("custom_field_" ++ p('teamleader.company.actief')) : p('teamleader.company.actief.ja')
}]]></dw:set-payload>
				</dw:transform-message>
			</when>
			<when
				expression="#[flowVars.'x-skryv-event' == 'process' &amp;&amp; flowVars.action == 'ended' &amp;&amp; flowVars.process_key == 'service_agreement']">
				<dw:transform-message
					doc:name="9 - SA - process - getekend opgeladen en goedgekeurd door VIAA">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{ api_group : p('teamleader.api_group'),
  api_secret : p('teamleader.api_secret'),
  track_changes : "1",
  company_id : flowVars.company_id,
  ("custom_field_" ++ p('teamleader.company.actief')) : p('teamleader.company.actief.ja'),
  ("custom_field_" ++ p('teamleader.company.service_agreement')) : "1"
}]]></dw:set-payload>
				</dw:transform-message>
			</when>
			<otherwise>
				<set-variable variableName="skip_event" value="true"
					doc:name="Set skip_event=true" />
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="crm_company_milestone_set_api_fields">
		<choice doc:name="Choice">
			<when
				expression="#[flowVars.'x-skryv-event' == 'milestone' &amp;&amp; flowVars.action == 'reached' &amp;&amp; flowVars.milestone_key == 'IntermediateThrowEvent_DS_ITV_geeninteressesamenwerkingVIAA' &amp;&amp; flowVars.milestone_status == 'Geen interesse']">
				<dw:transform-message
					doc:name="2 - ITV - Milestone &quot;Geen interesse&quot;">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{ api_group : p('teamleader.api_group'),
  api_secret : p('teamleader.api_secret'),
  track_changes : "1",
  company_id : flowVars.company_id,
  ("custom_field_" ++ p('teamleader.company.cp_status')) : p('teamleader.company.cp_status.nee'),
  ("custom_field_" ++ p('teamleader.company.intentieverklaring')) :  p('teamleader.company.intentieverklaring.ingevuld'),
  ("custom_field_" ++ p('teamleader.company.toestemming_starten')) : "0"
}]]></dw:set-payload>
				</dw:transform-message>
			</when>
			<when
				expression="#[flowVars.'x-skryv-event' == 'milestone' &amp;&amp; flowVars.action == 'reached' &amp;&amp; flowVars.milestone_key == 'IntermediateThrowEvent_DS_ITV_misschienlatersamenwerkingVIAA' &amp;&amp; flowVars.milestone_status == 'Misschien later samenwerking']">
				<dw:transform-message
					doc:name="3 - ITV - Milestone &quot;Misschien later samenwerking&quot;">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{ api_group : p('teamleader.api_group'),
  api_secret : p('teamleader.api_secret'),
  track_changes : "1",
  company_id : flowVars.company_id,
  ("custom_field_" ++ p('teamleader.company.cp_status')) : p('teamleader.company.cp_status.pending'),
  ("custom_field_" ++ p('teamleader.company.intentieverklaring')) :  p('teamleader.company.intentieverklaring.pending'),
  ("custom_field_" ++ p('teamleader.company.toestemming_starten')) : "0"
}]]></dw:set-payload>
				</dw:transform-message>
			</when>
			<when
				expression="#[flowVars.'x-skryv-event' == 'milestone' &amp;&amp; flowVars.action == 'reached' &amp;&amp; flowVars.milestone_key == 'IntermediateThrowEvent_DS_ITV_akkoordITVenopstart' &amp;&amp; flowVars.milestone_status == 'Akkoord en opstart']">
				<dw:transform-message
					doc:name="4 - ITV - Milestone &quot;Akkoord en opstart&quot;">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{ api_group : p('teamleader.api_group'),
  api_secret : p('teamleader.api_secret'),
  track_changes : "1",
  company_id : flowVars.company_id,
  ("custom_field_" ++ p('teamleader.company.cp_status')) : p('teamleader.company.cp_status.ja'),
  ("custom_field_" ++ p('teamleader.company.intentieverklaring')) :  p('teamleader.company.intentieverklaring.ingevuld'),
  ("custom_field_" ++ p('teamleader.company.toestemming_starten')) : "1"
}]]></dw:set-payload>
				</dw:transform-message>
			</when>
			<when
				expression="#[flowVars.'x-skryv-event' == 'milestone' &amp;&amp; flowVars.action == 'reached' &amp;&amp; flowVars.milestone_key == 'IntermediateThrowEvent_DS_ITV_akkoordITVgeenopstart' &amp;&amp; flowVars.milestone_status == 'Akkoord, geen opstart']">
				<dw:transform-message
					doc:name="5 - ITV - Milestone &quot;Akkoord, geen opstart&quot;">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{ api_group : p('teamleader.api_group'),
  api_secret : p('teamleader.api_secret'),
  track_changes : "1",
  company_id : flowVars.company_id,
  ("custom_field_" ++ p('teamleader.company.cp_status')) : p('teamleader.company.cp_status.ja'),
  ("custom_field_" ++ p('teamleader.company.intentieverklaring')) :  p('teamleader.company.intentieverklaring.ingevuld'),
  ("custom_field_" ++ p('teamleader.company.toestemming_starten')) : "0"
}]]></dw:set-payload>
				</dw:transform-message>
			</when>
			<when
				expression="#[flowVars.'x-skryv-event' == 'milestone' &amp;&amp; flowVars.action == 'reached' &amp;&amp; flowVars.milestone_key == 'IntermediateThrowEvent_DS_ITV_interesse_nietakkoordSWO' &amp;&amp; flowVars.milestone_status == 'Interesse, niet akkoord SWO']">
				<dw:transform-message
					doc:name="6 - ITV - Milestone &quot;Interesse, niet akkoord met SWO&quot;">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{ api_group : p('teamleader.api_group'),
  api_secret : p('teamleader.api_secret'),
  track_changes : "1",
  company_id : flowVars.company_id,
  ("custom_field_" ++ p('teamleader.company.cp_status')) : p('teamleader.company.cp_status.pending'),
  ("custom_field_" ++ p('teamleader.company.intentieverklaring')) :  p('teamleader.company.intentieverklaring.pending'),
  ("custom_field_" ++ p('teamleader.company.toestemming_starten')) : "0"
}]]></dw:set-payload>
				</dw:transform-message>
			</when>
			<!-- <when expression="#[flowVars.'x-skryv-event' == 'document']"> -->
			<!-- <flow-ref name="crm_event_document_comment" doc:name="Document Event 
				- Comment" /> -->
			<!-- </when> -->
			<otherwise>
				<set-variable variableName="skip_event" value="true"
					doc:name="Set skip_event=true" />
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="crm_company_document_set_api_fields">
		<choice doc:name="Check Key">
			<when expression="#[flowVars.document_key == 'getekende_service_agreement']">
				<flow-ref name="crm_company_document_set_api_fields_drager_golf"
					doc:name="Update Dragers en Golf" />
			</when>
			<otherwise>
				<flow-ref name="crm_company_document_set_api_fields_comment"
					doc:name="Update Comments" />
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="crm_company_update">
		<set-variable variableName="http_post_body" value="#[payload]"
			doc:name="Set - http_post_body" />
		<until-successful maxRetries="5" synchronous="true"
			doc:name="Until Successful">
			<http:request config-ref="HTTP_Request_Configuration_Teamleader"
				path="/updateCompany.php" method="POST" doc:name="HTTP - UpdateCompany" />
		</until-successful>
		<byte-array-to-string-transformer
			doc:name="Byte Array to String" />
		<set-variable variableName="state" value="CRM_COMPANY_UPDATED"
			doc:name="Variable - state - CRM_COMPANY_UPDATED" />
		<flow-ref name="esearch_publish_log_message" doc:name="esearch_publish_log_message" />
	</sub-flow>
	<sub-flow name="crm_company_get">
		<until-successful maxRetries="5" synchronous="true"
			doc:name="Until Successful">
			<http:request config-ref="HTTP_Request_Configuration_Teamleader"
				path="/getCompany.php" method="GET" doc:name="HTTP - GetComany Details">
				<http:request-builder>
                    <http:query-param paramName="api_group" value="${teamleader.api_group}"/>
                    <http:query-param paramName="api_secret" value="${teamleader.api_secret}"/>
                    <http:query-param paramName="company_id" value="#[flowVars.company_id]"/>
				</http:request-builder>
			</http:request>
		</until-successful>
		<set-payload
			value="#[org.apache.commons.lang3.StringEscapeUtils.unescapeHtml4(message.payloadAs(java.lang.String))]"
			encoding="UTF-8" mimeType="application/json" doc:name="HTML Decode Payload" />
		<dw:transform-message doc:name="LinkedHashMap">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
		</dw:transform-message>
		<set-variable variableName="company" value="#[payload]"
			doc:name="Variable - company" />
		<set-variable variableName="state" value="#['GET_COMPANY']"
			doc:name="Variable - state" />
		<flow-ref name="esearch_publish_log_message" doc:name="esearch_publish_log_message" />
	</sub-flow>
</mule>
